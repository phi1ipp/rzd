package com.grigorio.rzd.TicketServiceWSProxy;

import java.io.File;

import java.net.MalformedURLException;
import java.net.URL;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (11.1.1.0.0, build 130224.1947.04102)

@WebServiceClient(wsdlLocation="http://127.0.0.1/WebService/TicketService.wsdl",
  targetNamespace="urn:TicketService", name="TicketService")
public class TicketService
  extends Service
{
  private static URL wsdlLocationURL;

  private static Logger logger;
  static
  {
    try
    {
      logger = Logger.getLogger("com.grigorio.rzd.TicketServiceWSProxy.TicketService");
      URL baseUrl = TicketService.class.getResource(".");
      if (baseUrl == null)
      {
        wsdlLocationURL =
            TicketService.class.getResource("http://127.0.0.1/WebService/TicketService.wsdl");
        if (wsdlLocationURL == null)
        {
          baseUrl = new File(".").toURL();
          wsdlLocationURL =
              new URL(baseUrl, "http://127.0.0.1/WebService/TicketService.wsdl");
        }
      }
      else
      {
				if (!baseUrl.getPath().endsWith("/")) {
         baseUrl = new URL(baseUrl, baseUrl.getPath() + "/");
}
				wsdlLocationURL =
            new URL(baseUrl, "http://127.0.0.1/WebService/TicketService.wsdl");
      }
    }
    catch (MalformedURLException e)
    {
      logger.log(Level.ALL,
          "Failed to create wsdlLocationURL using http://127.0.0.1/WebService/TicketService.wsdl",
          e);
    }
  }

  public TicketService()
  {
    super(wsdlLocationURL,
          new QName("urn:TicketService", "TicketService"));
  }

  public TicketService(URL wsdlLocation, QName serviceName)
  {
    super(wsdlLocation, serviceName);
  }

  @WebEndpoint(name="portTicketService")
  public GetInfo getPortTicketService()
  {
    return (GetInfo) super.getPort(new QName("urn:TicketService",
                                             "portTicketService"),
                                   GetInfo.class);
  }

  @WebEndpoint(name="portTicketService")
  public GetInfo getPortTicketService(WebServiceFeature... features)
  {
    return (GetInfo) super.getPort(new QName("urn:TicketService",
                                             "portTicketService"),
                                   GetInfo.class, features);
  }
}
